"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[105],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),f=o,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4786:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={title:"Locking down on roles",sidebar_position:2},i=void 0,s={unversionedId:"usage-and-faq/locking_down_on_roles",id:"usage-and-faq/locking_down_on_roles",title:"Locking down on roles",description:"You can lock down on roles by creating your own wrapper dependency:",source:"@site/docs/usage-and-faq/locking_down_on_roles.mdx",sourceDirName:"usage-and-faq",slug:"/usage-and-faq/locking_down_on_roles",permalink:"/fastapi-azure-auth/usage-and-faq/locking_down_on_roles",editUrl:"https://github.com/Intility/FastAPI-Azure-Auth/edit/main/docs/docs/usage-and-faq/locking_down_on_roles.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Locking down on roles",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Accessing the user object",permalink:"/fastapi-azure-auth/usage-and-faq/accessing_the_user"},next:{title:"Calling your APIs from Python",permalink:"/fastapi-azure-auth/usage-and-faq/calling_your_apis_from_python"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can lock down on roles by creating your own wrapper dependency:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="dependencies.py"',title:'"dependencies.py"'},'from fastapi import Depends\nfrom fastapi_azure_auth.exceptions import InvalidAuth\nfrom fastapi_azure_auth.user import User\n\nasync def validate_is_admin_user(user: User = Depends(azure_scheme)) -> None:\n    """\n    Validate that a user is in the `AdminUser` role in order to access the API.\n    Raises a 401 authentication error if not.\n    """\n    if \'AdminUser\' not in user.roles:\n        raise InvalidAuth(\'User is not an AdminUser\')\n')),(0,o.kt)("p",null,"and then use this dependency over ",(0,o.kt)("inlineCode",{parentName:"p"},"azure_scheme"),"."))}d.isMDXComponent=!0}}]);