name: test

on: pull_request

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: actions/cache@v3.3.1
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-pip-
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-pip-
            ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
      - run: python -m pip install pre-commit
      - run: pre-commit run --all-files
  test:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8.13", "3.11.2", "3.12.0-alpha.5" ]
        fastapi-version: [ "0.68.0", "0.86.0", "0.95.0"]
        exclude:
          # Don't test python 3.12 on old FastAPI versions
          - python-version: "3.12.0-alpha.5"
            fastapi-version: "0.68.0"
          - python-version: "3.12.0-alpha.5"
            fastapi-version: "0.86.0"
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        uses: actions/cache@v3.3.1
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-0
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Install package
        run: poetry install --no-interaction
      - name: Install FastAPI ${{ matrix.fastapi-version }}
        run: |
          source .venv/bin/activate
          poetry add "fastapi==${{ matrix.fastapi-version }}"
      - name: Run tests
        run: |
          source .venv/bin/activate
          poetry run pytest --cov=fastapi_azure_auth --verbose --assert=plain
          poetry run coverage report
